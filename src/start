#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# create the runit definitions for narc
directory '/etc/service/narc' do
  recursive true
end

directory '/etc/service/narc/log' do
  recursive true
end

hook_file '/etc/service/narc/log/run' do
  source 'runit/narc-log'
  mode 0755
end

hook_file '/etc/service/narc/run' do
  source 'runit/narc'
  mode 0755
end

service 'narc' do
  action :enable
end

# create the runit definitions for logvac
directory '/etc/service/logvac' do
  recursive true
end

directory '/etc/service/logvac/log' do
  recursive true
end

hook_file '/etc/service/logvac/log/run' do
  source 'runit/logvac-log'
  mode 0755
end

hook_file '/etc/service/logvac/run' do
  source 'runit/logvac'
  mode 0755
end

service 'logvac' do
  action :enable
end

# wait until logvac is ready for interaction
ready = false
attempts = 0
until ready or attempts == 10

  attempts += 1

  execute 'probe connectivity' do
    command <<-EOF
      curl \
        -k \
        -H "X-AUTH-TOKEN: #{payload[:token]}" \
        https://127.0.0.1:6361?limit=1
    EOF
    on_exit { |code| ready = true if code == 0}
  end

  sleep 1 if not ready
end

if not ready
  raise "Logvac is started but not handling connections"
  exit 1
end
